@function bdrs($key) {
	@return map($border-radius, $key, "Nonexistent border-radius.");
}

@function c($key) {
	@return map($color, $key, "Nonexistent color.");
}

@function ff($key) {
	@return map($font-family, $key, "Nonexistent font-family.");
}

@function grid($key) {
	@return map($grid, $key, "Nonexistent $grid key.");
}

@function map($map, $key, $message) {
	@if map-has-key($map, $key) {
		@return map-get($map, $key);
	}
	@error "#{$message}";
	@return null;
}

@function rem($lengths) {
	$list: ();
	@each $length in $lengths {
		@if type-of($length) == number and unitless($length) {
			@if $length != 0 {
				$list: append($list, ($length / $html-font-size) + rem);
			}
			@else {
				$list: append($list, $length);
			}
		}
		@else {
			@error "$lengths variable must be a number or a list of numbers without unit.";
			@return null;
		}
	}
	@return $list;
}

@function trsdu($key) {
	@return map($transition-duration, $key, "Nonexistent transition duration.");
}

@function w($columns, $unit: "%") {
	@if type-of($columns) == number and $columns != 0 {
		@if $unit == "%" {
			@return 100% / (grid("columns") / $columns);
		}
		@else if $unit == "px" {
			@return ((grid("width") + grid("gutter")) * $columns) - grid("gutter");
		}
		@error "Undefined $unit variable.";
		@return null;
	}
	@error "$columns variable must be a non-zero number.";
	@return null;
}

@function z($key) {
	@return map($z-index, $key, "Nonexistent z-index.");
}